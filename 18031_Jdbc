import java.sql.*;
import java.util.Scanner;

public class Foodorder {
    int total;
    int totalQuantity;
    Scanner sc = new Scanner(System.in);

    int classicFries = 100;
    int cheeseFries = 120;
    int spicyFries = 110;
    int classicBurger = 120;
    int cheeseBurger = 140;
    int spicyBurger = 150;
    int veggieBurger = 130;
    int chickenBurger = 160;
    int margherita = 200;
    int pepperoni = 250;
    int bbqChicken = 270;
    int veggiePizza = 220;
    int hawaiian = 260;
    int fourCheese = 280;
    int meatLovers = 300;
    int seafoodPizza = 320;
    int mushroomPizza = 240;
    int spinachFeta = 230;
    int coldcoffee = 100;
    int colddrink = 80;
    int icedtea = 80;
    int lemonade = 90;
    int smoothie = 150;
    int pastry = 100;
    int cake = 120;
    int icecream = 80;
    int brownie = 90;

    public static void main(String[] args) {
        Foodorder fo = new Foodorder();
        fo.displayMenu();
        fo.order();
    }

    public void displayMenu() {
        System.out.println("********** WELCOME TO OUR CAFE ************");
        System.out.println("*******************************************");
        System.out.println("---- Fries ----");
        System.out.println("      1. Classic Fries       100/-");
        System.out.println("      2. Cheese Fries        120/-");
        System.out.println("      3. Spicy Fries         110/-");
        System.out.println("---- Burgers ----");
        System.out.println("      4. Classic Burger      120/-");
        System.out.println("      5. Cheese Burger       140/-");
        System.out.println("      6. Spicy Burger        150/-");
        System.out.println("      7. Veggie Burger       130/-");
        System.out.println("      8. Chicken Burger      160/-");
        System.out.println("---- Pizzas ----");
        System.out.println("      9. Margherita          200/-");
        System.out.println("     10. Pepperoni           250/-");
        System.out.println("     11. BBQ Chicken         270/-");
        System.out.println("     12. Veggie Pizza        220/-");
        System.out.println("     13. Hawaiian            260/-");
        System.out.println("     14. Four Cheese         280/-");
        System.out.println("     15. Meat Lovers         300/-");
        System.out.println("     16. Seafood Pizza       320/-");
        System.out.println("     17. Mushroom Pizza      240/-");
        System.out.println("     18. Spinach Feta        230/-");
        System.out.println("---- Drinks ----");
        System.out.println("     19. Cold Coffee         100/-");
        System.out.println("     20. Cold Drink          80/-");
        System.out.println("     21. Iced Tea            80/-");
        System.out.println("     22. Lemonade            90/-");
        System.out.println("     23. Smoothie            150/-");
        System.out.println("---- Desserts ----");
        System.out.println("     24. Pastry              100/-");
        System.out.println("     25. Cake                120/-");
        System.out.println("     26. Ice Cream           80/-");
        System.out.println("     27. Brownie             90/-");
        System.out.println("********************************************");
        System.out.println("     What would you like to order today?      ");
    }

    public void generateBill() {
        System.out.println();
        System.out.println("*********** Thank You For Ordering ***************");
        System.out.println("*********** Your Bill is : " + total + " *************");
    }

    public void order() {
        String again;
        while (true) {
            displayMenu();
            System.out.print("Enter your choice: ");
            int ch = sc.nextInt();
            int quantity;

            switch (ch) {
                case 1: quantity = getQuantity(); total += quantity * classicFries; totalQuantity += quantity; break;
                case 2: quantity = getQuantity(); total += quantity * cheeseFries; totalQuantity += quantity; break;
                case 3: quantity = getQuantity(); total += quantity * spicyFries; totalQuantity += quantity; break;
                case 4: quantity = getQuantity(); total += quantity * classicBurger; totalQuantity += quantity; break;
                case 5: quantity = getQuantity(); total += quantity * cheeseBurger; totalQuantity += quantity; break;
                case 6: quantity = getQuantity(); total += quantity * spicyBurger; totalQuantity += quantity; break;
                case 7: quantity = getQuantity(); total += quantity * veggieBurger; totalQuantity += quantity; break;
                case 8: quantity = getQuantity(); total += quantity * chickenBurger; totalQuantity += quantity; break;
                case 9: quantity = getQuantity(); total += quantity * margherita; totalQuantity += quantity; break;
                case 10: quantity = getQuantity(); total += quantity * pepperoni; totalQuantity += quantity; break;
                case 11: quantity = getQuantity(); total += quantity * bbqChicken; totalQuantity += quantity; break;
                case 12: quantity = getQuantity(); total += quantity * veggiePizza; totalQuantity += quantity; break;
                case 13: quantity = getQuantity(); total += quantity * hawaiian; totalQuantity += quantity; break;
                case 14: quantity = getQuantity(); total += quantity * fourCheese; totalQuantity += quantity; break;
                case 15: quantity = getQuantity(); total += quantity * meatLovers; totalQuantity += quantity; break;
                case 16: quantity = getQuantity(); total += quantity * seafoodPizza; totalQuantity += quantity; break;
                case 17: quantity = getQuantity(); total += quantity * mushroomPizza; totalQuantity += quantity; break;
                case 18: quantity = getQuantity(); total += quantity * spinachFeta; totalQuantity += quantity; break;
                case 19: quantity = getQuantity(); total += quantity * coldcoffee; totalQuantity += quantity; break;
                case 20: quantity = getQuantity(); total += quantity * colddrink; totalQuantity += quantity; break;
                case 21: quantity = getQuantity(); total += quantity * icedtea; totalQuantity += quantity; break;
                case 22: quantity = getQuantity(); total += quantity * lemonade; totalQuantity += quantity; break;
                case 23: quantity = getQuantity(); total += quantity * smoothie; totalQuantity += quantity; break;
                case 24: quantity = getQuantity(); total += quantity * pastry; totalQuantity += quantity; break;
                case 25: quantity = getQuantity(); total += quantity * cake; totalQuantity += quantity; break;
                case 26: quantity = getQuantity(); total += quantity * icecream; totalQuantity += quantity; break;
                case 27: quantity = getQuantity(); total += quantity * brownie; totalQuantity += quantity; break;
                case 28: generateBill(); saveOrderToDatabase(total, totalQuantity); total = 0; totalQuantity = 0; break;
                default: System.out.println("Invalid choice."); break;
            }

            if (ch != 28) {
                System.out.print("Do you wish to order anything else? (Y/N): ");
                again = sc.next();
                if (again.equalsIgnoreCase("N")) {
                    generateBill();
                    saveOrderToDatabase(total, totalQuantity);
                    total = 0;
                    totalQuantity = 0;
                    break;
                }
            } else {
                break;
            }
        }
    }

    public int getQuantity() {
        System.out.println("Enter the desired quantity:");
        return sc.nextInt();
    }

    public void saveOrderToDatabase(int total, int totalQuantity) {
        String url = "jdbc:mysql://localhost:3306/yourDatabase";
        String user = "yourUsername";
        String password = "yourPassword";

        try (Connection con = DriverManager.getConnection(url, user, password);
             PreparedStatement ps = con.prepareStatement("INSERT INTO Customers (totalBill, totalQuantity) VALUES (?, ?)")) {
            ps.setInt(1, total);
            ps.setInt(2, totalQuantity);
            ps.executeUpdate();
            System.out.println("Order saved to database.");
        } catch (SQLException e) {
            e.printStackTrace();
            System.out.println("Error saving order to database: " + e.getMessage());
        }
    }
}
